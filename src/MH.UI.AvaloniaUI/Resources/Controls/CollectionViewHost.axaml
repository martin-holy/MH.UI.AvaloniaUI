<Styles
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:uic="clr-namespace:MH.UI.Controls;assembly=MH.UI"
  xmlns:uii="clr-namespace:MH.UI.Interfaces;assembly=MH.UI"
  xmlns:c="clr-namespace:MH.UI.AvaloniaUI.Controls"
  xmlns:u="clr-namespace:MH.UI.AvaloniaUI.Utils"
  xmlns:conv="clr-namespace:MH.UI.AvaloniaUI.Converters"
  xmlns:mhuInt="clr-namespace:MH.Utils.Interfaces;assembly=MH.Utils"
  xmlns:rd="clr-namespace:MH.UI.AvaloniaUI.Resources"
  xmlns:ubc="clr-namespace:MH.Utils.BaseClasses;assembly=MH.Utils">

  <Styles.Resources>
    <ResourceDictionary>
      <ControlTheme
        x:Key="{x:Type c:CollectionViewHost}"
        TargetType="c:CollectionViewHost"
        BasedOn="{StaticResource {x:Type c:TreeDataGridHost}}"/>

      <TreeDataTemplate x:Key="MH.DT.CollectionViewGroup" ItemsSource="{Binding Items}" x:CompileBindings="False">
        <Border
          x:Name="border"
          BorderBrush="Black"
          BorderThickness="1"
          Margin="1,2,1,2"
          Background="{DynamicResource MH.B.Black5}"
          Height="30">

          <Interaction.Behaviors>
            <EventTriggerBehavior EventName="SizeChanged">
              <InvokeCommandAction Command="{x:Static c:CollectionViewHost.SetGroupWidthCommand}" PassEventArgsToCommand="True"/>
            </EventTriggerBehavior>
          </Interaction.Behaviors>

          <Grid
            Margin="{Binding Converter={x:Static conv:TreeMarginConverter.Inst}, ConverterParameter=16}"
            ColumnDefinitions="Auto,Auto,Auto,Auto">

            <ToggleButton
              x:Name="expander"
              Grid.Column="0"
              Theme="{DynamicResource MH.S.ToggleButton.TreeExpandCollapse}"
              IsChecked="{Binding IsExpanded, Mode=TwoWay}"/>

            <!-- Menu -->
            <Menu
              Grid.Column="1"
              Background="Transparent"
              VerticalAlignment="Center"
              Margin="0">

              <MenuItem Padding="6,2,-2,2">
                <MenuItem.Icon>
                  <PathIcon
                    Data="{Binding Icon, Converter={x:Static conv:ResourceConverter.Inst}}"
                    Foreground="{Binding Icon, Converter={x:Static conv:ResourceConverter.Inst},
                                 ConverterParameter={x:Static rd:Dictionaries.IconToBrush}}"
                    Classes="shadow"/>
                </MenuItem.Icon>

                <MenuItem Command="{Binding View.OpenGroupByDialogCommand}" CommandParameter="{Binding}"/>
                <MenuItem Command="{Binding View.ShuffleCommand}" CommandParameter="{Binding}"/>
                <MenuItem Command="{Binding View.SortCommand}" CommandParameter="{Binding}"/>

                <MenuItem x:Name="miView" Header="View" ItemsSource="{Binding View.ViewModesCommands}">
                  <MenuItem.ItemContainerTheme>
                    <ControlTheme TargetType="MenuItem">
                      <Setter Property="Header" Value="{Binding Text}"/>
                      <Setter Property="Command" Value="{Binding}"/>
                      <Setter Property="CommandParameter" Value="{Binding DataContext, ElementName=border}"/>
                    </ControlTheme>
                  </MenuItem.ItemContainerTheme>
                </MenuItem>
              </MenuItem>
            </Menu>

            <TextBlock
              Grid.Column="2"
              Text="{Binding GroupedBy.((mhuInt:IListItem)Data).Name}"
              VerticalAlignment="Center"
              Margin="5,0,5,0"
              FontSize="16"/>

            <TextBlock
              Grid.Column="3"
              Text="{Binding SourceCount}"
              VerticalAlignment="Center"
              Margin="5,0,5,0"
              FontWeight="Bold"
              FontSize="14"/>
          </Grid>
        </Border>

        <!--TODO PORT-->
        <!--<HierarchicalDataTemplate.Triggers>
          <DataTrigger Binding="{Binding Items.Count}" Value="0">
            <Setter TargetName="expander" Property="Visibility" Value="Hidden"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding View.ViewModesCommands.Length}" Value="1">
            <Setter TargetName="miView" Property="Visibility" Value="Collapsed"/>
          </DataTrigger>
        </HierarchicalDataTemplate.Triggers>-->
      </TreeDataTemplate>

      <DataTemplate x:Key="MH.DT.CollectionViewItem" DataType="{x:Type mhuInt:ISelectable}">
        <Grid UseLayoutRounding="True">
          <Border
            x:Name="border"
            BorderThickness="2"
            BorderBrush="Black"
            Margin="1">

            <ContentPresenter
              DataContext="{Binding}"
              Content="{Binding}"
              ContentTemplate="{Binding RelativeSource={RelativeSource Self},
                                Converter={x:Static conv:CollectionViewItemTemplateConverter.Inst}}"/>
          </Border>

          <Border
            x:Name="selectionBorder"
            BorderThickness="2"
            BorderBrush="{DynamicResource MH.B.Accent}"
            Margin="0"
            Opacity="0"
            Classes.visible="{Binding IsSelected}">

            <Polygon
              Width="40"
              Height="40"
              Points="0,40 40,40 40,0"
              Stroke="Black"
              StrokeThickness="1"
              HorizontalAlignment="Right"
              VerticalAlignment="Bottom"
              Fill="{DynamicResource MH.B.Accent9}"/>
          </Border>

          <Grid.Styles>
            <Style Selector="Border#selectionBorder.visible">
              <Setter Property="Opacity" Value="100"/>
            </Style>
          </Grid.Styles>
        </Grid>
      </DataTemplate>

      <DataTemplate x:Key="MH.DT.CollectionViewRow" x:CompileBindings="False">
        <ItemsControl
          x:Name="ic"
          ItemsSource="{Binding Leaves}"
          ItemTemplate="{StaticResource MH.DT.CollectionViewItem}"
          MaxWidth="{Binding ((uii:ICollectionViewGroup)Parent).Width}">

          <!--<b:Interaction.Triggers>
            <b:EventTrigger EventName="PreviewMouseDoubleClick">
              <b:InvokeCommandAction Command="c:CollectionViewHost.OpenItemCommand" PassEventArgsToCommand="True"/>
            </b:EventTrigger>
            <b:EventTrigger EventName="PreviewMouseUp">
              <b:InvokeCommandAction Command="c:CollectionViewHost.SelectItemCommand" PassEventArgsToCommand="True"/>
            </b:EventTrigger>
          </b:Interaction.Triggers>-->

          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal" Background="Transparent"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>

          <!--<ItemsControl.ItemContainerTheme>
            <ControlTheme TargetType="FrameworkElement">
              <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource Self},
                Converter={x:Static conv:CollectionViewItemSizeConverter.Inst}}"/>
            </ControlTheme>
          </ItemsControl.ItemContainerTheme>-->
        </ItemsControl>
      </DataTemplate>
    </ResourceDictionary>
  </Styles.Resources>
</Styles>